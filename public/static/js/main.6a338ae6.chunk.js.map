{"version":3,"sources":["redux/types/types.js","redux/reducers/authReducer.js","redux/reducers/calendarReducer.js","redux/reducers/uiReducer.js","redux/reducers/rootReducer.js","redux/store/store.js","hooks/useForm.js","helpers/fetch.js","redux/actions/auth.js","components/auth/LoginScreen.js","helpers/prepareEvents.js","redux/actions/events.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","redux/actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/ui/Loading.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpont","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","checkingFinish","login","user","logout","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterginValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","prepateEvets","event","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoader","Navbar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","startDate","minute","seconds","add","endDate","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","format","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","Loading","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","setTimeout","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a338ae6.chunk.js","sourcesContent":["export const types = {\r\n   uiOpenModal: '[ui] Open modal',\r\n   uiCloseModal: '[ui] Close modal',\r\n\r\n   eventSetAddNew: '[event] Set active',\r\n   eventStartAddNew: '[event] Start add new',\r\n   eventLogout: '[event] Cleaned logout',\r\n   eventAddNew: '[event] Add new',\r\n   eventClearActiveEvent: '[event] Clear active event',\r\n   eventUpdated: '[event] Updated event',\r\n   eventDeleted: '[event] Deleted event',\r\n   eventLoader: '[event] Events loader',\r\n\r\n   authCheckingFinish: '[auth] Finish checking login state',\r\n   authStartLogin: '[auth] Start login',\r\n   authLogin: '[auth] Login',\r\n   authStartRegister: '[auth] Start register',\r\n   authStartTokenRenew: '[auth] Start token renew',\r\n   authLogout: 'Logout',\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n   checking: true,\r\n   /* uid: null,\r\n   name: null, */\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case types.authLogin:\r\n         return {\r\n            ...state,\r\n            ...action.payload,\r\n            checking: false,\r\n         };\r\n\r\n      case types.authCheckingFinish:\r\n         return {\r\n            ...state,\r\n            checking: false,\r\n         };\r\n\r\n      case types.authLogout:\r\n         return {\r\n            checking: false,\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n   events: [],\r\n   activeEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case types.eventSetAddNew:\r\n         return {\r\n            ...state,\r\n            activeEvent: action.payload,\r\n         };\r\n\r\n      case types.eventAddNew:\r\n         return {\r\n            ...state,\r\n            events: [...state.events, action.payload],\r\n         };\r\n\r\n      case types.eventClearActiveEvent:\r\n         return {\r\n            ...state,\r\n            activeEvent: null,\r\n         };\r\n\r\n      case types.eventUpdated:\r\n         return {\r\n            ...state,\r\n            events: state.events.map((e) =>\r\n               e.id === action.payload.id ? action.payload : e\r\n            ),\r\n         };\r\n\r\n      case types.eventDeleted:\r\n         return {\r\n            ...state,\r\n            events: state.events.filter((e) => e.id !== state.activeEvent.id),\r\n            activeEvent: null,\r\n         };\r\n\r\n      case types.eventLoader:\r\n         return {\r\n            ...state,\r\n            events: [...action.payload],\r\n         };\r\n\r\n      case types.eventLogout:\r\n         return {\r\n            ...initialState,\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n   modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case types.uiOpenModal:\r\n         return {\r\n            ...state,\r\n            modalOpen: true,\r\n         };\r\n      case types.uiCloseModal:\r\n         return {\r\n            ...state,\r\n            modalOpen: false,\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n   ui: uiReducer,\r\n   calendar: calendarReducer,\r\n   auth: authReducer,\r\n});\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers =\r\n   (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n   const [values, setValues] = useState(initialState);\r\n\r\n   const reset = () => {\r\n      setValues(initialState);\r\n   };\r\n\r\n   const handleInputChange = ({ target }) => {\r\n      setValues({\r\n         ...values,\r\n         [target.name]: target.value,\r\n      });\r\n   };\r\n\r\n   return [values, handleInputChange, reset];\r\n};\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpont, data, method = 'GET') => {\r\n   const url = `${baseUrl}/${endpont}`;\r\n\r\n   if (method === 'GET') {\r\n      return fetch(url);\r\n   } else {\r\n      return fetch(url, {\r\n         method,\r\n         headers: {\r\n            'Content-type': 'application/json',\r\n         },\r\n         body: JSON.stringify(data),\r\n      });\r\n   }\r\n};\r\n\r\nconst fetchConToken = (endpont, data, method = 'GET') => {\r\n   const url = `${baseUrl}/${endpont}`;\r\n   const token = localStorage.getItem('token') || '';\r\n\r\n   if (method === 'GET') {\r\n      return fetch(url, {\r\n         method,\r\n         headers: {\r\n            'x-token': token,\r\n         },\r\n      });\r\n   } else {\r\n      return fetch(url, {\r\n         method,\r\n         headers: {\r\n            'Content-type': 'application/json',\r\n            'x-token': token,\r\n         },\r\n         body: JSON.stringify(data),\r\n      });\r\n   }\r\n};\r\n\r\nexport { fetchSinToken, fetchConToken };\r\n","import Swal from 'sweetalert2';\r\nimport { fetchConToken, fetchSinToken } from '../../helpers/fetch';\r\nimport { types } from '../types/types';\r\n\r\nexport const startLogin = (email, password) => {\r\n   return async (dispatch) => {\r\n      const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n      const body = await resp.json();\r\n\r\n      if (body.ok) {\r\n         localStorage.setItem('token', body.token);\r\n         localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n         dispatch(\r\n            login({\r\n               uid: body.uid,\r\n               name: body.name,\r\n            })\r\n         );\r\n      } else {\r\n         Swal.fire('Error', body.msg, 'error');\r\n      }\r\n   };\r\n};\r\n\r\nexport const startRegister = (name, email, password) => {\r\n   return async (dispatch) => {\r\n      const resp = await fetchSinToken(\r\n         'auth/new',\r\n         { name, email, password },\r\n         'POST'\r\n      );\r\n      const body = await resp.json();\r\n\r\n      if (body.ok) {\r\n         localStorage.setItem('token', body.token);\r\n         localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n         dispatch(\r\n            login({\r\n               uid: body.uid,\r\n               name: body.name,\r\n            })\r\n         );\r\n      } else {\r\n         Swal.fire('Error', body.uid, 'error');\r\n      }\r\n   };\r\n};\r\n\r\nexport const startChecking = () => {\r\n   return async (dispatch) => {\r\n      const resp = await fetchConToken('auth/renew');\r\n      const body = await resp.json();\r\n\r\n      if (body.ok) {\r\n         localStorage.setItem('token', body.token);\r\n         localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n         dispatch(\r\n            login({\r\n               uid: body.uid,\r\n               name: body.name,\r\n            })\r\n         );\r\n      } else {\r\n         dispatch(checkingFinish());\r\n      }\r\n   };\r\n};\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = (user) => ({\r\n   type: types.authLogin,\r\n   payload: user,\r\n});\r\n\r\nexport const startLogout = () => {\r\n   return (dispatch) => {\r\n      localStorage.clear();\r\n      dispatch(logout());\r\n   };\r\n};\r\n\r\nconst logout = () => ({\r\n   type: types.authLogout,\r\n});\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLogin, startRegister } from '../../redux/actions/auth';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n   const dispatch = useDispatch();\r\n\r\n   const [formLoginValues, handleLoginInputChange] = useForm({\r\n      lEmail: 'marlon268@gmail.com',\r\n      lPassword: '123456',\r\n   });\r\n   const [formRegisterginValues, handleRegisterInputChange] = useForm({\r\n      rName: '',\r\n      rEmail: '',\r\n      rPassword: '',\r\n      rPassword2: '',\r\n   });\r\n\r\n   const { rName, rEmail, rPassword, rPassword2 } = formRegisterginValues;\r\n   const { lEmail, lPassword } = formLoginValues;\r\n\r\n   const handleLogin = (e) => {\r\n      e.preventDefault();\r\n      dispatch(startLogin(lEmail, lPassword));\r\n   };\r\n\r\n   const handleRegister = (e) => {\r\n      e.preventDefault();\r\n\r\n      if (rPassword !== rPassword2) {\r\n         return Swal.fire('Error', 'Las contraseñas deben coincidir', 'error');\r\n      }\r\n\r\n      dispatch(startRegister(rName, rEmail, rPassword));\r\n   };\r\n\r\n   return (\r\n      <div className=\"container login-container\">\r\n         <div className=\"row\">\r\n            <div className=\"col-md-6 login-form-1\">\r\n               <h3>Ingreso</h3>\r\n               <form onSubmit={handleLogin}>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Correo\"\r\n                        name=\"lEmail\"\r\n                        value={lEmail}\r\n                        onChange={handleLoginInputChange}\r\n                     />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Contraseña\"\r\n                        name=\"lPassword\"\r\n                        value={lPassword}\r\n                        onChange={handleLoginInputChange}\r\n                     />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                     <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n                  </div>\r\n               </form>\r\n            </div>\r\n\r\n            <div className=\"col-md-6 login-form-2\">\r\n               <h3>Registro</h3>\r\n               <form onSubmit={handleRegister}>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Nombre\"\r\n                        name=\"rName\"\r\n                        value={rName}\r\n                        onChange={handleRegisterInputChange}\r\n                     />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Correo\"\r\n                        name=\"rEmail\"\r\n                        value={rEmail}\r\n                        onChange={handleRegisterInputChange}\r\n                     />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Contraseña\"\r\n                        name=\"rPassword\"\r\n                        value={rPassword}\r\n                        onChange={handleRegisterInputChange}\r\n                     />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Repita la contraseña\"\r\n                        name=\"rPassword2\"\r\n                        value={rPassword2}\r\n                        onChange={handleRegisterInputChange}\r\n                     />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                     <input\r\n                        type=\"submit\"\r\n                        className=\"btnSubmit\"\r\n                        value=\"Crear cuenta\"\r\n                     />\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const prepateEvets = (events = []) => {\r\n   return events.map((event) => ({\r\n      ...event,\r\n      end: moment(event.end).toDate(),\r\n      start: moment(event.start).toDate(),\r\n   }));\r\n};\r\n","import Swal from 'sweetalert2';\r\nimport { fetchConToken } from '../../helpers/fetch';\r\nimport { prepateEvets } from '../../helpers/prepareEvents';\r\nimport { types } from '../types/types';\r\n\r\nexport const eventStartAddNew = (event) => {\r\n   return async (dispatch, getState) => {\r\n      const { uid, name } = getState().auth;\r\n\r\n      try {\r\n         const resp = await fetchConToken('events', event, 'POST');\r\n         const body = await resp.json();\r\n\r\n         if (body.ok) {\r\n            event.id = body.event.id;\r\n            event.user = {\r\n               _id: uid,\r\n               name,\r\n            };\r\n            console.log(event);\r\n            dispatch(eventAddNew(event));\r\n         }\r\n      } catch (error) {\r\n         console.log(error);\r\n      }\r\n   };\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n   type: types.eventAddNew,\r\n   payload: event,\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n   type: types.eventSetAddNew,\r\n   payload: event,\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n   type: types.eventClearActiveEvent,\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n   return async (dispatch) => {\r\n      try {\r\n         console.log(event);\r\n         const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n         const body = await resp.json();\r\n         console.log(body);\r\n         if (body.ok) {\r\n            dispatch(eventUpdated(event));\r\n         } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n         }\r\n      } catch (error) {\r\n         console.log(error);\r\n      }\r\n   };\r\n};\r\n\r\nconst eventUpdated = (event) => ({\r\n   type: types.eventUpdated,\r\n   payload: event,\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n   return async (dispatch, getState) => {\r\n      const { id } = getState().calendar.activeEvent;\r\n\r\n      try {\r\n         const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n         const body = await resp.json();\r\n         console.log(body);\r\n         if (body.ok) {\r\n            dispatch(eventDeleted());\r\n         } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n         }\r\n      } catch (error) {\r\n         console.log(error);\r\n      }\r\n   };\r\n};\r\n\r\nconst eventDeleted = () => ({\r\n   type: types.eventDeleted,\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n   return async (dispatch) => {\r\n      try {\r\n         const resp = await fetchConToken('events');\r\n         const body = await resp.json();\r\n         const events = prepateEvets(body.events);\r\n\r\n         dispatch(eventLoader(events));\r\n      } catch (error) {\r\n         console.log(error);\r\n      }\r\n   };\r\n};\r\n\r\nconst eventLoader = (events) => ({\r\n   type: types.eventLoader,\r\n   payload: events,\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n   type: types.eventLogout,\r\n});\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../redux/actions/auth';\r\nimport { eventLogout } from '../../redux/actions/events';\r\n\r\nexport const Navbar = () => {\r\n   const { name } = useSelector((state) => state.auth);\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const handleLogout = () => {\r\n      dispatch(startLogout());\r\n      dispatch(eventLogout());\r\n   };\r\n\r\n   return (\r\n      <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n         <span className=\"navbar-brand\">{name}</span>\r\n\r\n         <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n            <i className=\"fas fa-sign-out-alt\"></i>\r\n            <span> Salir</span>\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n","// Este objetos se lo pasamos al <Calendar /> en el componente <CalendarScreen />\r\n// para cambiar las lapabras de este que por defecto vienen en ingles\r\nexport const messages = {\r\n   allDay: 'Todo el día',\r\n   previous: '<',\r\n   next: '>',\r\n   today: 'Hoy',\r\n   month: 'Mes',\r\n   week: 'Semana',\r\n   day: 'Día',\r\n   agenda: 'Agenda',\r\n   date: 'Fecha',\r\n   time: 'Hora',\r\n   event: 'Evento',\r\n   noEventsInRange: 'No hay eventos en este rango',\r\n   showMore: (total) => `+ Ver más (${total})`,\r\n};\r\n","import React from 'react';\r\n\r\n// Recibe todo el evento\r\nexport const CalendarEvent = ({ event }) => {\r\n   const { title, user } = event;\r\n\r\n   return (\r\n      <div>\r\n         <strong>{title}</strong>\r\n         <span> - {user.name}</span>\r\n      </div>\r\n   );\r\n};\r\n","import { types } from '../types/types';\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });\r\n","import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../redux/actions/ui';\r\nimport {\r\n   eventClearActiveEvent,\r\n   eventStartAddNew,\r\n   eventStartUpdate,\r\n} from '../../redux/actions/events';\r\n\r\nconst customStyles = {\r\n   content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n   },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst startDate = moment().minute(0).seconds(0).add(1, 'hours');\r\nconst endDate = startDate.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n   title: '',\r\n   notes: [],\r\n   start: startDate.toDate(),\r\n   end: endDate.toDate(),\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n   const [dateStart, setDateStart] = useState(startDate.toDate());\r\n   const [dateEnd, setDateEnd] = useState(endDate.toDate());\r\n   const [titleValid, setTitleValid] = useState(true);\r\n\r\n   const dispatch = useDispatch();\r\n   const { modalOpen } = useSelector((state) => state.ui);\r\n   const { activeEvent } = useSelector((state) => state.calendar);\r\n\r\n   const [formValues, setFormValues] = useState(initEvent);\r\n\r\n   const { notes, title, start, end } = formValues;\r\n\r\n   useEffect(() => {\r\n      if (activeEvent) {\r\n         setFormValues(activeEvent);\r\n      } else {\r\n         setFormValues(initEvent);\r\n      }\r\n   }, [activeEvent, setFormValues]);\r\n\r\n   const handleInputChange = ({ target }) => {\r\n      setFormValues({\r\n         ...formValues,\r\n         [target.name]: target.value,\r\n      });\r\n   };\r\n\r\n   const closeModal = () => {\r\n      dispatch(uiCloseModal());\r\n      dispatch(eventClearActiveEvent());\r\n      setFormValues(initEvent);\r\n   };\r\n\r\n   const handleStartDateChange = (e) => {\r\n      setDateStart(e);\r\n      setFormValues({\r\n         ...formValues,\r\n         start: e,\r\n      });\r\n   };\r\n\r\n   const handleEndDateChange = (e) => {\r\n      setDateEnd(e);\r\n      setFormValues({\r\n         ...formValues,\r\n         end: e,\r\n      });\r\n   };\r\n\r\n   const handleSubmitForm = (e) => {\r\n      e.preventDefault();\r\n\r\n      const momentStart = moment(start);\r\n      const momentEnd = moment(end);\r\n\r\n      if (momentStart.isSameOrAfter(momentEnd)) {\r\n         return Swal.fire(\r\n            'Error',\r\n            'La fecha fin debe de ser mayor a la fecha de inicio',\r\n            'error'\r\n         );\r\n      }\r\n\r\n      if (title.trim().length < 2) {\r\n         return setTitleValid(false);\r\n      }\r\n\r\n      //TODO: realizar grabación\r\n      if (activeEvent) {\r\n         dispatch(eventStartUpdate(formValues));\r\n      } else {\r\n         // Eliminamos el array bacio para que el backend no me genere errores\r\n         if (notes.length < 1) {\r\n            delete formValues.notes;\r\n         }\r\n         dispatch(eventStartAddNew(formValues));\r\n      }\r\n\r\n      setTitleValid(true);\r\n      closeModal();\r\n   };\r\n\r\n   return (\r\n      <Modal\r\n         isOpen={modalOpen}\r\n         /* onAfterOpen={afterOpenModal} */\r\n         onRequestClose={closeModal}\r\n         style={customStyles}\r\n         closeTimeoutMS={200}\r\n         className=\"modal\"\r\n         overlayClassName=\"modal-fondo\"\r\n      >\r\n         <h1> {activeEvent ? 'Editar evento' : 'Nuevo evento'} </h1>\r\n         <hr />\r\n         <form className=\"container\" onSubmit={handleSubmitForm}>\r\n            <div className=\"form-group\">\r\n               <label>Fecha y hora inicio</label>\r\n               <DateTimePicker\r\n                  className=\"form-control\"\r\n                  onChange={handleStartDateChange}\r\n                  value={dateStart}\r\n                  format=\"y-MM-dd h:mm a\"\r\n               />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <label>Fecha y hora fin</label>\r\n               <DateTimePicker\r\n                  className=\"form-control\"\r\n                  onChange={handleEndDateChange}\r\n                  value={dateEnd}\r\n                  minDate={dateStart}\r\n                  format=\"y-MM-dd h:mm a\"\r\n               />\r\n            </div>\r\n\r\n            <hr />\r\n            <div className=\"form-group\">\r\n               <label>Titulo y notas</label>\r\n               <input\r\n                  type=\"text\"\r\n                  className={`form-control ${!titleValid && 'is-invalid'} `}\r\n                  placeholder=\"Título del evento\"\r\n                  name=\"title\"\r\n                  autoComplete=\"off\"\r\n                  value={title}\r\n                  onChange={handleInputChange}\r\n               />\r\n               <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                  Una descripción corta\r\n               </small>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <textarea\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Notas\"\r\n                  rows=\"5\"\r\n                  name=\"notes\"\r\n                  value={notes}\r\n                  onChange={handleInputChange}\r\n               ></textarea>\r\n               <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                  Información adicional\r\n               </small>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n               <i className=\"far fa-save\"></i>\r\n               <span> Guardar</span>\r\n            </button>\r\n         </form>\r\n      </Modal>\r\n   );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../redux/actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n   const dispatch = useDispatch();\r\n\r\n   const handleOpenModal = () => {\r\n      dispatch(uiOpenModal());\r\n   };\r\n\r\n   return (\r\n      <button className=\"btn btn-primary fab\" onClick={handleOpenModal}>\r\n         <i className=\"fas fa-plus\"></i>\r\n      </button>\r\n   );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../redux/actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n   const dispatch = useDispatch();\r\n\r\n   const handleDelete = () => {\r\n      dispatch(eventStartDelete());\r\n   };\r\n\r\n   return (\r\n      <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n         <i className=\"fas fa-trash\"></i>\r\n         <span> Borrar evento</span>\r\n      </button>\r\n   );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { uiOpenModal } from '../../redux/actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n   eventClearActiveEvent,\r\n   eventSetActive,\r\n   eventStartLoading,\r\n} from '../../redux/actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n// Con esto cambiamos el idioma del calendario a español, ya que\r\n// este se adapta al idioma establecido por moment\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n\r\nexport const CalendarScreen = () => {\r\n   const [lastView, setLastView] = useState(\r\n      localStorage.getItem('lastView') || 'month'\r\n   );\r\n   const dispatch = useDispatch();\r\n   const { events, activeEvent } = useSelector((state) => state.calendar);\r\n   const { uid } = useSelector((state) => state.auth);\r\n\r\n   useEffect(() => {\r\n      dispatch(eventStartLoading());\r\n   }, [dispatch]);\r\n\r\n   const onDoubleClick = (e) => {\r\n      dispatch(uiOpenModal());\r\n   };\r\n\r\n   const onSelectEvent = (e) => {\r\n      dispatch(eventSetActive(e));\r\n   };\r\n\r\n   const onViewChange = (e) => {\r\n      setLastView(e);\r\n      localStorage.setItem('lastView', e);\r\n   };\r\n\r\n   const onSelectSlot = (e) => {\r\n      dispatch(eventClearActiveEvent());\r\n   };\r\n\r\n   // Esta funcion personaliza los eventos del calendario\r\n   const eventStyleGetter = (event, start, end, isSelected) => {\r\n      const style = {\r\n         backgroundColor: uid === event.user._id ? '#367CF7' : '#465660',\r\n         borderRadius: '0px',\r\n         opacity: 0.8,\r\n         display: 'block',\r\n         color: 'white',\r\n      };\r\n\r\n      return {\r\n         style,\r\n      };\r\n   };\r\n\r\n   return (\r\n      <div className=\"calendar-screen\">\r\n         <Navbar />\r\n\r\n         <Calendar\r\n            messages={messages}\r\n            localizer={localizer}\r\n            events={events}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            eventPropGetter={eventStyleGetter}\r\n            onDoubleClickEvent={onDoubleClick}\r\n            onSelectEvent={onSelectEvent}\r\n            onView={onViewChange}\r\n            onSelectSlot={onSelectSlot}\r\n            selectable={true}\r\n            view={lastView}\r\n            components={{\r\n               event: CalendarEvent,\r\n            }}\r\n         />\r\n         <AddNewFab />\r\n\r\n         {activeEvent && <DeleteEventFab />}\r\n\r\n         <CalendarModal />\r\n      </div>\r\n   );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n   return (\r\n      <div className=\"loadingio-spinner-bean-eater-019tsefrdye4\">\r\n         <div className=\"ldio-1fzxaalb3dn\">\r\n            <div>\r\n               <div></div>\r\n               <div></div>\r\n               <div></div>\r\n            </div>\r\n            <div>\r\n               <div></div>\r\n               <div></div>\r\n               <div></div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n   isAuthenticated,\r\n   component: Component,\r\n   ...rest\r\n}) => {\r\n   return (\r\n      <Route\r\n         {...rest}\r\n         component={(props) =>\r\n            isAuthenticated ? (\r\n               <Component {...props} />\r\n            ) : (\r\n               <Redirect to=\"/auth/login\" />\r\n            )\r\n         }\r\n      />\r\n   );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n   isAuthenticated: PropTypes.bool.isRequired,\r\n   component: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n   isAuthenticated,\r\n   component: Component,\r\n   ...rest\r\n}) => {\r\n   return (\r\n      <Route\r\n         {...rest}\r\n         component={(props) =>\r\n            !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n         }\r\n      />\r\n   );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n   isAuthenticated: PropTypes.bool.isRequired,\r\n   component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { Loading } from '../components/ui/Loading';\r\nimport { startChecking } from '../redux/actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n   const dispatch = useDispatch();\r\n   const { checking, uid } = useSelector((state) => state.auth);\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         dispatch(startChecking());\r\n      }, 1000);\r\n   }, [dispatch]);\r\n\r\n   if (checking) {\r\n      return (\r\n         <div className=\"loading-pacman\">\r\n            <Loading />\r\n         </div>\r\n      );\r\n   }\r\n\r\n   return (\r\n      <Router>\r\n         <div>\r\n            <Switch>\r\n               <PublicRoute\r\n                  exact\r\n                  path=\"/auth/login\"\r\n                  component={LoginScreen}\r\n                  isAuthenticated={!!uid}\r\n               />\r\n               <PrivateRoute\r\n                  exact\r\n                  path=\"/\"\r\n                  component={CalendarScreen}\r\n                  isAuthenticated={!!uid}\r\n               />\r\n\r\n               <Redirect to=\"/auth/login\" />\r\n            </Switch>\r\n         </div>\r\n      </Router>\r\n   );\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './redux/store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n   return (\r\n      <Provider store={store}>\r\n         <AppRouter />\r\n      </Provider>\r\n   );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}